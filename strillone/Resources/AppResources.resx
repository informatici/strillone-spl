<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>it-it</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>APPLICAZIONE</value>
  </data>
  <data name="AppBarButtonText" xml:space="preserve">
    <value>aggiungi</value>
  </data>
  <data name="AppBarMenuItemText" xml:space="preserve">
    <value>Voce di menu</value>
  </data>
  <data name="SuggestionOnArticle" xml:space="preserve">
    <value>Usa il pulsante in basso a destra per scorrere gli articoli</value>
  </data>
  <data name="SuggestionOnSection" xml:space="preserve">
    <value>Usa il pulsante in basso a destra per scorrere le sezioni</value>
  </data>
  <data name="SuggestionOnTitle" xml:space="preserve">
    <value>Usa il pulsante in basso a destra per scorrere le testate</value>
  </data>
  <data name="loading" xml:space="preserve">
    <value>Caricamento dati...</value>
  </data>
  <data name="noTitles" xml:space="preserve">
    <value>Non ci sono testate nella tua lingua</value>
  </data>
  <data name="EnterSezione" xml:space="preserve">
    <value>Sei entrato nella sezione</value>
  </data>
  <data name="ErrorServer" xml:space="preserve">
    <value>Errore di connessione con il server</value>
  </data>
  <data name="StartEdizioni" xml:space="preserve">
    <value>Navigazione edizioni</value>
  </data>
  <data name="StartNavigazione" xml:space="preserve">
    <value>Inizio navigazione</value>
  </data>
  <data name="StartSezioni" xml:space="preserve">
    <value>Navigazione sezioni</value>
  </data>
  <data name="SuggestionOnPositionArticolo" xml:space="preserve">
    <value>Sei al primo articolo</value>
  </data>
  <data name="SuggestionOnPositionLastArticolo" xml:space="preserve">
    <value>Sei all'ultimo articolo</value>
  </data>
  <data name="SuggestionOnPositionLastSezione" xml:space="preserve">
    <value>Sei all'ultima sezione</value>
  </data>
  <data name="SuggestionOnPositionLastTestata" xml:space="preserve">
    <value>Sei all'ultima testata</value>
  </data>
  <data name="SuggestionOnPositionSezione" xml:space="preserve">
    <value>Sei alla prima sezione</value>
  </data>
  <data name="SuggestionOnPositionTestata" xml:space="preserve">
    <value>Sei alla prima testata</value>
  </data>
  <data name="TestataReady" xml:space="preserve">
    <value>Pronta per la lettura</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Strillone è un'applicazione di Informatici senza Frontiere che consente di ascoltare le notizie sullo smartphone del proprio giornale preferito mediante la sintesi vocale integrata. Utilizzare Strillone è facile e veloce, tenendo il tuo telefono o tablet tra le mani, identifica i quattro angoli dello schermo, ad ognuno di essi è associata un'azione. Angolo superiore sinistro: Tocca brevemente questo angolo per tornare al livello superiore. Se, ad esempio, stai navigando gli articoli, premendo questo angolo puoi interrompere la lettura dell'articolo. Premendolo nuovamente puoi tornare alle sezioni del giornale, e così via. Se vuoi chiudere Strillone, premi a lungo questo pulsante e l'applicazione si chiuderà. Angolo superiore destro: Tocca brevemente questo angolo per passare da una sezione o da un articolo al precedente. Angolo inferiore destro: Tocca brevemente questo angolo per passare da una sezione o da un articolo al successivo. Angolo inferiore sinistro: Tocca brevemente questo angolo per scendere al livello successivo. Se, ad esempio, stai navigando le sezioni del giornale, premendo questo angolo puoi entrare nella lista degli articoli della sezione scelta. Premendolo nuovamente puoi avviare la lettura dell'articolo di interesse. Se vuoi ascoltare nuovamente questa guida vocale premi a lungo l'angolo inferiore sinistro.</value>
  </data>
  <data name="ExitApp" xml:space="preserve">
    <value>Chiusura applicazione</value>
  </data>
  <data name="EditionStamp" xml:space="preserve">
    <value>Edizione del</value>
  </data>
  <data name="Mese1" xml:space="preserve">
    <value>Gennaio</value>
  </data>
  <data name="Mese10" xml:space="preserve">
    <value>Ottobre</value>
  </data>
  <data name="Mese11" xml:space="preserve">
    <value>Novembre</value>
  </data>
  <data name="Mese12" xml:space="preserve">
    <value>Dicembre</value>
  </data>
  <data name="Mese2" xml:space="preserve">
    <value>Febbraio</value>
  </data>
  <data name="Mese3" xml:space="preserve">
    <value>Marzo</value>
  </data>
  <data name="Mese4" xml:space="preserve">
    <value>Aprile</value>
  </data>
  <data name="Mese5" xml:space="preserve">
    <value>Maggio</value>
  </data>
  <data name="Mese6" xml:space="preserve">
    <value>Giugno</value>
  </data>
  <data name="Mese7" xml:space="preserve">
    <value>Luglio</value>
  </data>
  <data name="Mese8" xml:space="preserve">
    <value>Agosto</value>
  </data>
  <data name="Mese9" xml:space="preserve">
    <value>Settembre</value>
  </data>
  <data name="SuggestionBtnEntra" xml:space="preserve">
    <value>Entra</value>
  </data>
  <data name="SuggestionBtnPrecedente" xml:space="preserve">
    <value>Precedente</value>
  </data>
  <data name="SuggestionBtnSali" xml:space="preserve">
    <value>Sali</value>
  </data>
  <data name="SuggestionBtnSuccessivo" xml:space="preserve">
    <value>Successivo</value>
  </data>
  <data name="NoNodeSelectedArticolo" xml:space="preserve">
    <value>Non è stata selezionato alcuna articolo</value>
  </data>
  <data name="NoNodeSelectedSezione" xml:space="preserve">
    <value>Non è stata selezionata alcuna sezione</value>
  </data>
  <data name="NoNodeSelectedTestata" xml:space="preserve">
    <value>Non è stata selezionata alcuna testata</value>
  </data>
  <data name="Buffering" xml:space="preserve">
    <value>Caricamento in corso</value>
  </data>
</root>